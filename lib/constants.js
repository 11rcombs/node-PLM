module.exports = {
	MIN_OUT_COMMAND: 0x60, // Commands < 0x60 aren't echoes or replies
	STX: 0x02,
	ACK: 0x06,
	NAK: 0x15,
	PLM_COMMANDS: {
		INSTEON_STD_RECV: 0x50,
		INSTEON_EXT_RECV: 0x51,
		X10_RECV: 0x52,
		ALL_LINK_COMPLETE: 0x53,
		BUTTON_EVENT_REPORT: 0x54,
		USER_RESET_DETECTED: 0x55,
		ALL_LINK_CLEANUP_FAILURE: 0x56,
		ALL_LINK_RECORD_RESPONSE: 0x57,
		ALL_LINK_CLEANUP_STATUS: 0x58,
		GET_IM_INFO: 0x60,
		SEND_ALL_LINK: 0x61,
		SEND_INSTEON: 0x62,
		SEND_X10: 0x63,
		START_ALL_LINKING: 0x64,
		CANCEL_ALL_LINKING: 0x65,
		SET_HOST_DEV_CAT: 0x66,
		RESET_IM: 0x67,
		SET_INSTEON_ACK: 0x68,
		GET_FIRST_ALL_LINK_RECORD: 0x69,
		GET_NEXT_ALL_LINK_RECORD: 0x6A,
		SET_IM_CONFIGURATION: 0x6B,
		GET_ALL_LINK_RECORD_FOR_SENDER: 0x6C,
		LED_ON: 0x6D,
		LED_OFF: 0x6E,
		MANAGE_ALL_LINK_RECORD: 0x6F,
		SET_INSTEON_NAK: 0x70,
		SET_INSTEON_ACK2: 0x71,
		RF_SLEEP: 0x72,
		GET_IM_CONFIG: 0x73
	},
	ALL_LINK_TYPES: {
		RESPONDER: 0x00,
		CONTROLLER: 0x01,
		AUTO: 0x03,
		DELETE: 0xFF
	},
	CMD_LEN: {
		0x50: 9,
		0x51: 23,
		0x52: 2,
		0x53: 8,
		0x54: 1,
		0x55: 0,
		0x56: 5,
		0x57: 8,
		0x58: 1,
		0x60: 7,
		0x61: 4,
		0x62: undefined, // SEND_INSTEON is variable-length
		0x63: 3,
		0x64: 3,
		0x65: 1,
		0x66: 4,
		0x67: 1,
		0x68: 2,
		0x69: 1,
		0x6A: 1,
		0x6B: 2,
		0x6C: 1,
		0x6D: 1,
		0x6E: 1,
		0x6F: 10,
		0x70: 2,
		0x71: 3,
		0x72: 1,
		0x73: 4
	},
	INSTEON_COMMANDS: {
		DIRECT: {
			STD: {
				ADD_GROUP: 0x01,
				REMOVE_GROUP: 0x02,
				PRODUCT_DATA_REQUEST: 0x03,
				FX_USERNAME_REQUEST: 0x04,
				DEVICE_TEXT_STRING_REQUEST: 0x04,
				ENTER_LINKING_MODE: 0x09,
				ENTER_UNLINKING_MODE: 0x0A,
				GET_ENGINE_VERSION: 0x0D,
				PING: 0x0F,
				ID_REQUEST: 0x10,
				LIGHT_ON: 0x11,
				LIGHT_ON_FAST: 0x12,
				LIGHT_OFF: 0x13,
				LIGHT_OFF_FAST: 0x14,
				LIGHT_BRIGHTEN: 0x15,
				LIGHT_DIM: 0x16,
				LIGHT_START_CHANGE: 0x17,
				LIGHT_STOP_CHANGE: 0x18,
				LIGHT_STATUS_REQUEST: 0x19,
				GET_OPERATING_FLAGS: 0x1F,
				SET_OPERATING_FLAGS: 0x20,
				LIGHT_INSTANT_CHANGE: 0x21,
				LIGHT_TURNED_OFF: 0x22,
				LIGHT_TURNED_ON: 0x23,
				REREAD_INIT_VALUES: 0x24,
				REMOTE_SET_BUTTON_TAP: 0x25,
				LIGHT_SET_STATUS: 0x27,
				SET_ADDRESS_MSB: 0x28,
				POKE_ONE_BYTE: 0x29,
				PEEK_ONE_BYTE: 0x2B,
				PEEK_ONE_BYTE_INTERNAL: 0x2C,
				POKE_ONE_BYTE_INTERNAL: 0x2D,
				LIGHT_ON_AT_RATE: 0x2E,
				LIGHT_OFF_AT_RATE: 0x2F,
				SPRINKLER_VALVE_ON: 0x40,
				SPRINKLER_VALVE_OFF: 0x41,
				SPRINKLER_PROGRAM_ON: 0x42,
				SPRINKLER_PROGRAM_OFF: 0x43,
				SPRINKLER_CONTROL: 0x44,
				FLASH_LED: 0x45,
				SPRINKLER_GET_PROGRAM_REQUEST: 0x45,
				IO_OUTPUT_ON: 0x45,
				IO_OUTPUT_OFF: 0x46,
				IO_ALARM_DATA_REQUEST: 0x47,
				IO_WRITE_OUTPUT_PORT: 0x48,
				IO_READ_INPUT_PORT: 0x49,
				IO_GET_SENSOR_VALVE: 0x4A,
				IO_SET_SENSOR_1_NOMINAL_VALUE: 0x4B,
				IO_GET_SENSOR_ALARM_DELTA: 0x4C,
				FAN_STATUS_REPORT: 0x4C,
				IO_WRITE_CONFIG_PORT: 0x4D,
				IO_READ_CONFIG_PORT: 0x4E,
				IO_MODULE_CONTROL: 0x4F,
				POOL_DEVICE_ON: 0x50,
				POOL_DEVICE_OFF: 0x51,
				POOL_TEMPERATURE_UP: 0x52,
				POOL_TEMPERATURE_DOWN: 0x53,
				POOL_CONTROL: 0x54,
				DOOR_MOVE: 0x58,
				DOOR_STATUS_REPORT: 0x59,
				WINDOW_COVERING: 0x60,
				WINDOW_COVERING_POSITION: 0x61,
				THERMOSTAT_TEMPERATURE_UP: 0x68,
				THERMOSTAT_TEMPERATURE_DOWN: 0x69,
				THERMOSTAT_GET_ZONE_INFO: 0x6A,
				THERMOSTAT_CONTROL: 0x6B,
				THERMOSTAT_SET_COOL_SETPOINT: 0x6C,
				THERMOSTAT_SET_HEAT_SETPOINT: 0x6D,
				LEAK_DETECTOR_ANNOUNCE: 0x70,
				ASSIGN_TO_COMPANION_DEVICE: 0x81
			},
			EXT: {
				// FIXME: WRITEME
			}
		},
		GROUP: {
			STD: {
				RECALL: 0x11,
				ALIAS_1_HIGH: 0x11,
				ALIAS_1_LOW: 0x13,
				ALIAS_2_HIGH: 0x12,
				ALIAS_2_LOW: 0x14,
				ALIAS_3_HIGH: 0x15,
				ALIAS_3_LOW: 0x16,
				ALIAS_4_HIGH: 0x17,
				ALIAS_4_LOW: 0x18,
				ALIAS_5: 0x21,
				LIGHT_ON: 0x11,
				LIGHT_ON_FAST: 0x12,
				LIGHT_OFF: 0x13,
				LIGHT_OFF_FAST: 0x14,
				LIGHT_BRIGHTEN: 0x15,
				LIGHT_DIM: 0x16,
				LIGHT_START_CHANGE: 0x17,
				LIGHT_STOP_CHANGE: 0x18,
				LIGHT_INSTANT_CHANGE: 0x21
			},
			EXT: {
				// There aren't any standard Extended Group
				// commands at the moment. If you need one,
				// file an issue and I'll add it.
			}
		},
		BROADCAST: {
			STD: {
				SET_BUTTON_PRESSED_RESPONDER: 0x01,
				SET_BUTTON_PRESSED_CONTROLLER: 0x02,
				TEST_POWERLINE_PHASE: 0x03,
				HEARTBEAT: 0x05,
				DEVICE_STATUS_CHANGED: 0x27,
				SALAD_DEBUG_REPORT: 0x49
			},
			EXT: {
				// There aren't any standard Extended Broadcast
				// commands at the moment. If you need one,
				// file an issue and I'll add it.
			}
		}
	},
	BUTTON_EVENTS: {
		SET_TAPPED: 0x02,
		SET_HELD: 0x03,
		SET_RELEASED: 0x04,
		BTN2_TAPPED: 0x12,
		BTN2_HELD: 0x13,
		BTN2_RELEASED: 0x14,
		BTN3_TAPPED: 0x22,
		BTN3_HELD: 0x23,
		BTN3_RELEASED: 0x24
	}
};
